#+AUTHOR: Ross M. Donaldson
#+EMAIL: gastove@gmail.com
#+PROPERTY: header-args :results output silent
#+PROPERTY: RESUME_ALL tech music cv all
#+PROPERTY: SHAPE_ALL 1page 2page cv all
#+LATEX_CLASS: resume
#+LATEX_HEADER: \location{Portland, OR}

* Colophon                                                         :noexport:
This is my resume, done as an [[http://orgmode.org/][Emacs Org-Mode]] document. Eventually, the idea is
to be able to use a combination of properties, Org [[http://orgmode.org/manual/Sparse-trees.html][sparse trees]], and the Org
[[http://orgmode.org/manual/Exporting.html][export framework]] to be able to generate resumes of a variety of different shapes
(one page or two, CV, music vs. professional) in an array of different formats
(html, markdown, pdf).

Right now, this is pretty much just a hot mess.

** Notes
There's a bunch of parts I'm using in here. This is as much for me as for the
curious -- putting things where I can find them later.

- [[http://orgmode.org/manual/Using-the-mapping-API.html#Using-the-mapping-API][The Org Mapping API]]
- [[http://orgmode.org/manual/Using-the-property-API.html#Using-the-property-API][The Org Property API]]

* Functions and Hooks                                              :noexport:
The custom ~resume.cls~ class wont be usable unless it's in ~org-latex-classes~. We
also need, in the same definition, to provide numbered and unnumbered mappings
for each level of header.

#+BEGIN_SRC emacs-lisp
  (add-to-list 'org-latex-classes
               '("resume"
                 "\\documentclass{resume}"
                 ("\\section{%s}" . "\\section*{%s}")
                 ("\\subsection{%s}" . "\\subsection*{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                 ("\\paragraph{%s}" . "\\paragraph*{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
#+END_SRC

This from [[http://emacs.stackexchange.com/questions/156/emacs-function-to-convert-an-arbitrary-org-property-into-an-arbitrary-string-na][Malabarba]]:
#+BEGIN_SRC emacs-lisp
  (defun endless/replace-org-property (backend)
    "Convert org properties using `endless/org-property-mapping'.
  Lookup BACKEND in `endless/org-property-mapping' for a list of
  \(PROPERTY REPLACEMENT). For each healine being exported, if it has a
  PROPERTY listed insert a string immediately after the healine given by
      (format REPLACEMENT PROPERTY-VALUE)"
    (let ((map (cdr (assoc backend endless/org-property-mapping)))
          value replacement)
      (when map
        (org-map-entries
         (lambda ()
           (dolist (it map)
             (save-excursion
               (when (setq value (org-entry-get (point) (car it)))
                 (funcall (cdr it) value)))))))))
#+END_SRC

One of Malabarba's very good ideas is an alist, ~(exporter-backend (property
. fun-to-call-on-prop))~, defined with ~defcustom~. This is incredibly flexible --
but I don't actually need that much flexibility. In my case, I want to be able
to mark an entry as being of a particular type (i.e. ~employment~), and then have
its properties edited/inserted a particular way. This means I need a map
~(export-backend (marker-value . fun-to-call-on-all-pros))~, and a function
that'll operate accordingly.
#+BEGIN_SRC emacs-lisp
  (defun gastove/employment-block (props)
    (let ((emp (cdr (assoc "EMPLOYER" props)))
          (loc (cdr (assoc "LOCATION" props)))
          (start-d (cdr (assoc "START-DATE" props)))
          (end-d (cdr (assoc "END-DATE" props)))
          (tpl "\\employer{%s}{%s}{%s}{%s}"))
      (search-forward-regexp org-property-end-re)
      (forward-char 1)
      (insert (format tpl emp loc start-d end-d))))

  ;; During development, if the fn-map needs to be chanced, it'll need to be
  ;; unbound each time. Whee.
  ;;
  ;; (makunbound 'gastove/property-fn-map)
  (defvar gastove/property-fn-map
    '((latex ("employment" . gastove/employment-block))))

  (defun gastove/process-org-properties (backend)
    "For each heading its called on, loads the properties, then
    passes them to a provided function, which will format them for
    export by BACKEND."
    (let ((map (cdr (assoc backend gastove/property-fn-map)))
          res-type f)
      (when map
        (org-map-entries
         (lambda ()
           (save-excursion
             (when (setq res-type (org-entry-get (point) "KIND"))
               (when (setq f (cdr (assoc res-type map)))
                 (funcall f (org-entry-properties (point)))))))))))

  (add-hook 'org-export-before-processing-hook #'gastove/process-org-properties)
#+END_SRC

* LaTeX Class                                                      :noexport:
Need to create commands for:

** DOING Employment
** TODO Header/Title
** TODO Skills
** TODO Headings and sections
** BACKLOG Education
** BACKLOG Dig in to ~org-latex-title-command~

* I am:
:PROPERTIES:
:KIND:     statement
:TECH:     A data scientist, generalist programmer, enthusiastic and systematic problem solver
:MUSIC:    An experienced choral singer and capable baritone soloist
:END:

* Projects
- Behavioral Analyst and lead usability researcher for :: Big Fish Casino,
     Multiple-time \#1 Top-Grossing App, iTunes App Store; Top-Grossing Casino
     App Worldwide (App Annie, 2013-14)

* Experience

** Coordinator, Technologist in Residence
:PROPERTIES:
:EMPLOYER: Reed College
:LOCATION: Portland, OR
:START-DATE: 2016-01-15
:END-DATE: Present
:KIND:     employment
:RESUME:   tech
:END:

I run the Reed College Software Design Studio, a one-year program during which
students with a wide variety of backgrounds and experiences learn to code. I’ve
developed and taught the curriculum, including python, object-oriented
programming, version control, web development, relational databases (including
both SQL and ORMs), basic command-line skills, and teamwork/communication
skills. Recruited a large group of mentors from industry, and with their help
lead the students working full-time for the summer on projects requested by the
Reed community. At time of writing, all projects are set to finish successfully
by end of year.

** Senior Data Scientist
:PROPERTIES:
:EMPLOYER: Urban Airship
:LOCATION: Portland, OR
:START-DATE: 2014-05-12
:END-DATE: 2016-08-10
:KIND:     employment
:RESUME:   tech
:END:

Advocated for the benefit of a layers of abstraction over raw data; designed and
implemented that abstraction in the form of an analytics-specific schema and a
new data warehouse. Built, maintained, and evolved an ETL pipeline starting on
owned metal and moving eventually to AWS. Created tooling for working with the
data warehouse, implemented the Lifecycle Lists product on top of it. Modeled
data for a secondary, customer-facing warehouse with strict performance
requirements. Collaborated with Operations to construct a containerized logging
system optimized for debugging customer issues.


** Senior Data Scientist
:PROPERTIES:
:RESUME:   tech
:SHAPE:    1page
:LOCATION: Oakland, CA
:KIND:     employment
:EMPLOYER: Big Fish Games
:START-DATE: 2011-05-20
:END-DATE: 2014-04-30
:END:

Starting with business needs, developed metrics, instrumented them in server
code, mined and processed raw data, created automatic visualizations with both
in-house and third-party tools, and delivered results to designers, engineers,
and stakeholders across the organization. Created and deployed new information
channels to the entire user base. Developed powerful analytics tools using
open-source solutions to get insights faster. Drove understanding of the user
with usability research and data analytics. Modeled user information needs,
conducted user research; brought both to the UI, UX, and game design processes.

** Content Strategist and Information Architect
:PROPERTIES:
:SHAPE:    cv
:RESUME:   tech
:EMPLOYER: Modus Cooperandi
:START-DATE: 2011-01-01
:END-DATE: 2011-05-31
:END:
Initiated an extensive discovery process to articulate business identity,
organizational objectives, and target users. Used this information to ground a
content analysis (including content inventory, modelling of extant information
architecture, and extrapolation of extant metadata), which in turn became the
empirical backbone of a new information architecture and accompanying content
strategy.

** Owner and Proprietor
:PROPERTIES:
:EMPLOYER: Delicious Wheels
:SHAPE:    cv
:RESUME:   cv
:START-DATE: 2009-05-01
:END-DATE: 2010-12-13
:END:
Founded Delicious Wheels, a bicycle repair company doing all business by
bicycle. Attended three farmer's markets per week for the entire summer with a
complete bike shop's worth of tools and a portable work bench in tow. At
markets, and during house-calls, provided repair services, education, and clear,
logical opinions. Received a number of positive reviews in local magazines and
blogs.
** Gabriel and Adam, _Die Schöpfung_ of Haydn
:PROPERTIES:
:RESUME:   music
:END:

* Skills
:PROPERTIES:
:RESUME:   tech
:END:

- Data Engineering :: Schema design, data modeling and warehousing, ETL
     pipelines
- Data Science :: Analytic-focused work including dashboards, analytic SQL, metric
  design and instrumentation. Permanent, high-test plumnbing.
- Information Science :: The natural complement to data science: what information
  do we need to create, and why? How should it be exposed? User and
     organizational information-needs modeling, information audit, user-centered
     design; hackish, get-it-done-style plumbing.
- Programming :: Tidy, re-usable code; strong relationship with version control. Functional programming. Unit testing, documentation.
- Storytelling :: Practiced, capable public speaker; excellent written
     communication skills. Connects users with content, users and content with
     designers, business and design needs with engineering, strategic and
     tactical decision-makers with user behavior

* Education
:PROPERTIES:
:RESUME:   all
:END:
- University of Washington Information School, Seattle, WA, 2011 :: Master of
     Science in Information Management
- Reed College, Portland, OR, 2006 :: Bachelor of Arts in Music, with thesis.

* Languages
:PROPERTIES:
:RESUME:   tech
:END:
- Good :: Clojure, Python, Scala, SQL
- OK :: Java, F#, R, Ruby, Go, JavaScript

* Tools
:PROPERTIES:
:RESUME:   tech
:END:
- Good :: Git, Unix/Linux, Postgres, MySQL, Hadoop, Cascading, Scalding, RedShift, EMR, Netezza
- Also ::  Misc other AWS, HBase, Kafka, Chronos, Mesos

* Extra-Curricular
:PROPERTIES:
:RESUME:   tech
:END:

- Cook :: Roasting, bread baking, beer brewing. Peasant cuisine, sous-vide. Canning/preserving/fermenting. Bicycles Touring cyclist; bicycle repair and education
- Bartender :: Classic and bottled cocktails, sake, craft beer, whiskey
- Singer :: Opera, chamber choirs
- Games :: Tabletop RPGs, Xbox, PC
- Also :: Hiking, backpacking, powerlifting, knitting
